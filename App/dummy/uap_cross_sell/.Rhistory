left_join(prod_biz_map, by="item") %>%
select(user_id, item, business, score)
head(all_cust_recs_df)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3)
all_cust_recs_df %>%
group_by(user_id, business) %>%
slice(1:3)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log10(score + 1)))-1)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1) %>%
ungroup() %>%
group_by(user_id, business, max_score) %>%
arrange(desc(max_score))
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1) %>%
ungroup() %>%
group_by(user_id, business, max_score) %>%
arrange(desc(max_score))
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1) %>%
count(user_id,business)
all_cust_recs_df %>%
#group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1) %>%
count(user_id,business)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
filter(user_id=='10051')
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1) %>%
filter(user_id=="10051")
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1) %>%
ungroup() %>%
group_by(user_id, max_score) %>%
arrange(desc(max_score))
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
ungroup() %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1)
group_by(user_id, max_score) %>%
arrange(desc(max_score))
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
ungroup() %>%
group_by(user_id)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
ungroup() %>%
group_by(user_id) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1)
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
ungroup() %>%
group_by(user_id) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1) %>%
ungroup() %>%
group_by(user_id, max_score) %>%
arrange(desc(max_score))
all_cust_recs_df %>%
group_by(user_id, business) %>%
arrange(desc(score)) %>%
slice(1:3) %>%
ungroup() %>%
group_by(user_id) %>%
mutate(avg = mean(score),
max_score = max(score),
geom_avg = mean(exp(log(score + 1)))-1) %>%
ungroup() %>%
group_by(user_id, max_score) %>%
arrange(desc(max_score)) %>%
ungroup()
colnames(MSWeb10)[1:20]
predict(object = ke_ubcf, newdata = MSWeb10[100:101])
user_choices <- c("Microsoft.com Search",
"International IE content",
"Visual Basic Support",
"MS PowerPoint",
"Support Desktop")
pivot_wider(data = user_choices)
user_choices <- tibble(user_choices = "Microsoft.com Search",
"International IE content",
"Visual Basic Support",
"MS PowerPoint",
"Support Desktop")
user_choices
View(user_choices)
user_choices <- tibble(user_choices =
c("Microsoft.com Search",
"International IE content",
"Visual Basic Support",
"MS PowerPoint",
"Support Desktop"))
pivot_wider(data = user_choices)
user_choices <- c("Microsoft.com Search",
"International IE content",
"Visual Basic Support",
"MS PowerPoint",
"Support Desktop")
user_choices_df <- tibble(user_choices = user_choices)
user_choices_df
?rep
rep_along?
?rep_along
?rep_along
?rep
user_choices_df <- tibble(user_choices = user_choices,
choice = rep(1, times = length(user_choices)))
user_choices_df
pivot_wider(data = user_choices,
names_from = user_choices,
values_from = choice)
?pivot_wider
pivot_wider(data = user_choices,
names_from = "user_choices",
values_from = choice)
pivot_wider(data = user_choices,
names_from = "user_choices",
values_from = "choice")
pivot_wider(data = user_choices,
names_from = user_choices,
values_from = "choice")
?pivot_wider
user_choices_df <- tibble(user_choices)
user_choices_df
pivot_wider(data = user_choices,
names_from = user_choices,
values_fill = 1)
pivot_wider(data = user_choices_df,
names_from = user_choices,
values_fill = 1)
pivot_wider(data = user_choices_df,
names_from = user_choices,
values_fill = 1)
user_choices_df <- tibble(user_choices = user_choices,
choice = rep(1, times = length(user_choices)))
pivot_wider(data = user_choices_df,
names_from = user_choices,
values_from = choice)
user_choices_df <-
pivot_wider(data = user_choices_df,
names_from = user_choices,
values_from = choice)
as.matrix(user_choices_df)
colnames(as.matrix(user_choices_df))
user_choices_mat <- as.matrix(user_choices_df)
colnames(user_choices_mat)
user_choices_ratmat <- as(user_choices_mat,"binaryRatingMatrix")
class(user_choices_ratmat)
predict(object = ke_ubcf, newdata = user_choices_ratmat)
class(MSWeb10[100:100])
class(MSWeb10[100:100])
class(user_choices_ratmat)
class(MSWeb10[100:101])
class(user_choices_ratmat)
colnames(MSWeb10[100:101])
class(MSWeb10[100:101])
class(user_choices_ratmat)
colnames(MSWeb10[100:101])[1:10]
colnames(user_choices_ratmat)
names(user_choices_df)
colnames(MSWeb10)
!colnames(MSWeb10) %in% colnames(user_choices_df)[1:10]
colnames(MSWeb10)[10]
colnames(MSWeb10)[!colnames(MSWeb10) %in% colnames(user_choices_df)]
colnames(MSWeb10)[!colnames(MSWeb10) %in% colnames(user_choices_df)]
colnames(MSWeb10)[!colnames(MSWeb10) %in% user_choices]
colnames(MSWeb10)[colnames(MSWeb10) %in% user_choices]
not_user_choices <- colnames(MSWeb10)[!colnames(MSWeb10) %in% user_choices]
length(not_user_choices)
?rep
user_choices_df <- tibble(user_choices = c(user_choices, not_user_choices),
choice = rep(x = c(1,0),
times = c(length(user_choices), length(not_user_choices))
)
)
user_choices_df <- tibble(user_choices = c(user_choices, not_user_choices),
choice = rep(x = c(1,0),
each = c(length(user_choices), length(not_user_choices))
)
)
rep(1:4, 2)
rep(1:4, each = 2)
rep(c(1,2), times = 2)
rep(c(1,2), times = c(2,3))
rm(user_choices_df)
length(not_user_choices)
length(user_choices)
user_choices_df <- tibble(user_choices = c(user_choices, not_user_choices),
choice = rep(x = c(1,0),
times = c(length(user_choices),
length(not_user_choices))))
tibble(user_choices = c(user_choices, not_user_choices))
user_choices_df <- tibble(user_choices = c(user_choices, not_user_choices),
choice = rep(x = c(1,0),
times = c(length(user_choices),
length(not_user_choices)),
each = 1))
rep(c(1,2), times = c(2,3))
rep(c(1,2), each = c(2,3))
rep(c(1,2), times = c(2,3))
rep(c(1,0), times = c(5,280))
user_choices_df <- tibble(user_choices = c(user_choices, not_user_choices))
choices <- tibble(choices =
rep(x = c(1,0),
times = c(length(user_choices),
length(not_user_choices))
))
dim(choices)
choices
bind_cols(user_choices_df,choices)
user_choices_df
user_choices_df <- tibble(user_choices = c(user_choices,
not_user_choices),
choices = rep(x = c(1,0),
times = c(length(user_choices),
length(not_user_choices))))
choices <- tibble(choices =
rep(x = c(1,0),
times = c(length(user_choices),
length(not_user_choices))
))
choices
user_choices_df
choices %>%
mutate(user_choices, not_user_choices)
user_choices_df
choices %>%
mutate(user_choices = c(user_choices, not_user_choices))
user_choices_df <-
choices %>%
mutate(user_choices = c(user_choices, not_user_choices))
choices <- tibble(choice =
rep(x = c(1,0),
times = c(length(user_choices),
length(not_user_choices))
))
user_choices_df <-
choices %>%
mutate(user_choices = c(user_choices, not_user_choices))
head(user_choices_df)
user_choices_df <-
pivot_wider(data = user_choices_df,
names_from = user_choices,
values_from = choice)
head(user_choices_df)
user_choices_mat <- as.matrix(user_choices_df)
colnames(user_choices_mat)
user_choices_mat <- as.matrix(user_choices_df)
colnames(user_choices_mat)[1:10]
user_choices_ratmat <- as(user_choices_mat,"binaryRatingMatrix")
class(user_choices_ratmat)
class(MSWeb10[100:101])
class(user_choices_ratmat)
colnames(MSWeb10[100:101])[1:10]
colnames(user_choices_ratmat)
class(MSWeb10[100:101])
class(user_choices_ratmat)
colnames(MSWeb10[100:101])[1:10]
colnames(user_choices_ratmat)[1:10]
length(colnames(MSWeb10))
length(colnames(user_choices_ratmat))
predict(object = ke_ubcf, newdata = user_choices_ratmat)
rec_opt3 <- predict(object = ke_ubcf, newdata = user_choices_ratmat)
rm(rec_opt3)
pre_opt3 <- predict(object = ke_ubcf, newdata = user_choices_ratmat)
as(pre_opt3, "list")
pre_opt3 <- predict(object = ke_ubcf,
newdata = user_choices_ratmat,
type="ratings")
as(pre_opt3, "list")
pre_opt3 <- predict(object = ke_ubcf,
newdata = user_choices_ratmat,
type="ratings")
as(pre_opt3, "list")
as(pre_opt3, "list")[1:10]
as(pre_opt3, "list") %>%
tibble()
as(pre_opt3, "list") %>%
tibble(names(.))
as(pre_opt3, "list") %>%
tibble(customer = names(.))
as(pre_opt3, "list") %>%
tibble(customer = names(.)) %>%
unnest(.)
as(pre_opt3, "list") %>%
tibble(customer = names(.)) %>%
unnest(score = .)
as(pre_opt3, "list") %>%
tibble(customer = names(.)) %>%
unnest(.) %>%
rename(score = ".")
colnames(user_choices_ratmat)
as(pre_opt3, "list") %>%
tibble(customer = names(.)) %>%
unnest(.) %>%
rename(score = ".") %>%
mutate(item = colnames(user_choices_ratmat))
as(pre_opt3, "list") %>%
tibble(customer = names(.)) %>%
unnest(.) %>%
rename(score = ".") %>%
dim(.)
dim(user_choices_ratmat)
as(pre_opt3, "list") %>%
data.frame()
as(pre_opt3, "list") %>%
data.frame() %>%
rename(score = X1) %>%
rownames_to_column("item")
as(pre_opt3, "list") %>%
data.frame() %>%
rename(score = X1) %>%
rownames_to_column("item") %>%
left_join(prod_biz_map, by = "item")
as(pre_opt3, "list") %>%
data.frame() %>%
rename(score = X1) %>%
rownames_to_column("item") %>%
left_join(prod_biz_map, by = "item") %>%
arrange(desc(score))
save.image("./Showcase - dummy.RData")
q()
shiny::runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
q()
library(shiny)
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
?selectInput
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
library(DT)
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
?fluidPage
library(shinythemes)
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
install.packages("shinythemes")
install.packages("shinythemes")
?shinytheme
??shinytheme
shiny::runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
runApp('E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell')
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
set.seed(123)
prod_biz_map <-
tibble(item = colnames(MSWeb)) %>%
mutate(business = sample(x = c("life","non-life","health","asset","banking"),
size = nrow(.),
replace = TRUE,
prob = c(0.1,0.2,0.4,0.15,0.15)))
head(prod_biz_map)
load("./Showcase - dummy.RData")
set.seed(123)
prod_biz_map <-
tibble(item = colnames(MSWeb)) %>%
mutate(business = sample(x = c("life","non-life","health","asset","banking"),
size = nrow(.),
replace = TRUE,
prob = c(0.1,0.2,0.4,0.15,0.15)))
head(prod_biz_map)
save.image("./Showcase - dummy.RData")
preds_all <- pred_ratings_list %>%
tibble(user_id = names(.)) %>%
unnest(cols = ".") %>%
mutate(item = item_name_vec) %>%
rename(score = ".") %>%
left_join(prod_biz_map, by = "item") %>%
select(user_id,item,business,score)
preds_all
getwd()
setwd("E:/Contracts/UAP/D - Working Papers/Cross-selling Model/models/Showcase/uap_cross_sell")
runApp()
runApp()
?renderDataTable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list = ls())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load("./Showcase - dummy.RData")
getwd()
q()
shiny::runApp()
runApp()
?shinytheme
runApp()
install.packages("bslib")
runApp()
runApp()
detach("package:bslib", unload = TRUE)
install.packages("shiny")
install.packages("shiny")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
q()
